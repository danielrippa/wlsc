job: script

  include:livescript(bare='true' header='') Exception.ls
  include:livescript(bare='true' header='') Wsh.ls

  include:livescript(bare='true' header='') NativeString.ls
  include:livescript(bare='true' header='') NativeArray.ls
  include:livescript(bare='true' header='') NativeObject.ls
  include:livescript(bare='true' header='') NativeFunction.ls

  include:livescript(bare='true' header='') FileSystem.ls
  include:livescript(bare='true' header='') TextFile.ls
  include:livescript(bare='true' header='') ObjectFile.ls

  include:livescript(bare='true' header='') Shell.ls

  include:livescript(bare='true' header='') WlscUtils.ls
  include:livescript(bare='true' header='') LivescriptParser.ls

  include:livescript(bare='true' header='') WlscNamespacePathResolver.ls
  include:livescript(bare='true' header='') WlscDependencyFactory.ls
  include:livescript(bare='true' header='') WlscDependencyManager.ls
  include:livescript(bare='true' header='') WlscScriptComposer.ls

  :livescript(bare='true' header='')

    { argc, arg, fail, script-name } = Wsh
    { parse-filename } = FileSystem

    if argc is 0 => fail do

      * "Usage:"
        "#{ parse-filename script-name .name } wls-filename."

    ##

    { stdout } = Wsh
    { compose-wls-script } = WlsScriptComposer

    filename = arg 0

    script-lines = compose-wls-script filename

    for line in script-lines => stdout '\n', line

